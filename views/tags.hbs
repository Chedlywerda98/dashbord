<div>
  <h3 class="h3">Patterns:</h3>
  <ul id="patterns">
    {{#each patterns}}
      <li class="note">
        {{this}},
        <button class="delete-btn" onclick="deletePatt('{{../intentId}}', '{{this}}')">Delete</button>
      </li>
    {{/each}}
    <li class="note">
      <input type="text" id="newPatternInput">
      <button class="add-btn" onclick="addPattern('{{../intentId}}')">Add</button>
    </li>
  </ul>
</div>

<div>
  <h3 class="h3">Responses:</h3>
  <ul id="responses">
    {{#each responses}}
      <li class="note">
        {{this}},
        <button class="delete-btn" onclick="deleteResp('{{../intentId}}', '{{this}}')">Delete</button>
      </li>
    {{/each}}
    <li class="note">
      <input type="text" id="newResponseInput">
      <button class="add-btn" onclick="addResponse('{{../intentId}}')">Add</button>
    </li>
  </ul>
</div>



<style>
	.note {
		background-color: #f2f2f2;
		padding: 20px;
		margin-bottom: 20px;
	}

    .h3 {
       color: white; 
       font-size: 14px;
        margin-left: 10px;
    }

    .delete-btn {
        background-color: #f44336;
        border: none;
        color: white;
        padding: 5px 10px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 14px;
        margin-left: 10px;
        cursor: pointer;
    }

    .add-btn {
        background-color: #3c74b8;
        border: none;
        color: white;
        padding: 5px 10px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 14px;
        margin-left: 10px;
        cursor: pointer;
    }

    .update-btn {
        background-color: #58dea4;
        border: none;
        color: white;
        padding: 5px 10px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 14px;
        margin-left: 10px;
        cursor: pointer;
    }

     body {
    
	background-image: url('https://images.unsplash.com/photo-1485470733090-0aae1788d5af?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1517&q=80');

}

</style>



<script>
function deletePatt(intentId, patternId) {
  if (confirm("Are you sure you want to delete this pattern?")) {
    fetch(`/tags/${intentId}/${encodeURIComponent(patternId)}`, { method: 'DELETE' })
      .then(response => {
        if (response.ok) {
          location.reload(); 
        } else {
          alert("Failed to delete the pattern.");
        }
      })
      .catch(error => {
        console.error(error);
        alert("An error occurred while deleting the pattern.");
      });
  }
}

function deleteResp(intentId, responseId) {
  if (confirm("Are you sure you want to delete this response?")) {
    fetch(`/tags/${intentId}/${encodeURIComponent(responseId)}`, { method: 'DELETE' })
      .then(response => {
        if (response.ok) {
          location.reload(); 
        } else {
          alert("Failed to delete the response.");
        }
      })
      .catch(error => {
        console.error(error);
        alert("An error occurred while deleting the response.");
      });
  }
}

function addPattern(intentId) {
  const newPatternInput = document.getElementById('newPatternInput');
  const newPattern = newPatternInput.value.trim();
  
  if (newPattern) {
    fetch(`/tags/${intentId}/patterns`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ pattern: newPattern })
    })
      .then(response => {
        if (response.ok) {
          location.reload(); 
        } else {
          alert("Failed to add the pattern.");
        }
      })
      .catch(error => {
        console.error(error);
        alert("An error occurred while adding the pattern.");
      });
  }
}


function addResponse(intentId) {
  const newResponse = document.getElementById('newResponseInput').value;

  fetch(`/tags/${intentId}`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({ response: newResponse }),
  })
    .then(response => {
      if (response.ok) {
        location.reload(); 
      } else {
        alert('Failed to add the response.');
      }
    })
    .catch(error => {
      console.error(error);
      alert('An error occurred while adding the response.');
    });
}


</script>

